type MultiLanguageContent {
   id: ID! @id
   pt: String
   en: String
}

type Welcome {
   id: ID! @id

   test: Test!

   title: MultiLanguageContent! @relation(link: INLINE, onDelete: CASCADE)
   message: MultiLanguageContent! @relation(link: INLINE, onDelete: CASCADE)
}

type Company {
   id: ID! @id

   name: String! @unique
   abbr: String

   welcome: Welcome! @relation(link: INLINE, onDelete: CASCADE)

   tests: [Test!]! @relation(link: INLINE, onDelete: CASCADE)
}

type Test {
   id: ID! @id

   welcome: Welcome! @relation(link: INLINE, onDelete: CASCADE)
   company: Company!

   title: MultiLanguageContent! @relation(link: INLINE, onDelete: CASCADE)

   steps: [Step!]! @relation(link: INLINE, onDelete: CASCADE)
   menus: [Menu!]! @relation(link: INLINE, onDelete: CASCADE)

   results: [TestResult!]! @relation(link: INLINE, onDelete: CASCADE)
}

type Menu {
   id: ID! @id

   root: Boolean! @default(value: false)

   menus: [Menu!]! @relation(name: "SubMenu")

   name: String!

   items: [Menu!]! @relation(name: "SubMenu", link: INLINE, onDelete: CASCADE)
}

type Path {
   id: ID! @id
   parent: Step!
   paths: [Menu!]! @relation(link: INLINE)
}

type Keys {
   id: ID! @id
   userType: [KeyUserType!]! @relation(link: INLINE)
   resultStatus: [KeyResultStatus!]! @relation(link: INLINE)
}

type KeyUserType {
   id: ID! @id
   key: String! @unique
   steps: [Step!]!
}

type KeyResultStatus {
   id: ID! @id
   key: String! @unique
   results: [TestResult!]!
}

type Step {
   id: ID! @id

   parent: Test

   type: [KeyUserType!]! @relation(link: INLINE)

   question: String!

   targets: [Menu!]! @relation(link: INLINE, name: "StepTarget")

   paths: [Path!]! @relation(link: INLINE)

   results: [StepResult!]!
}

type TestResult {
   id: ID! @id

   parent: Test!

   start: DateTime!
   end: DateTime

   time: TimeResult @relation(link: INLINE)

   steps: [StepResult!]! @relation(link: INLINE)

   status: KeyResultStatus! @relation(link: INLINE)
}

type TimeResult {
   id: ID! @id

   int: Int!
   text: String!
}

type StepResult {
   id: ID! @id

   parent: Step! @relation(link: INLINE)

   resultParent: TestResult!

   start: DateTime!
   end: DateTime

   time: TimeResult @relation(link: INLINE)

   path: [Menu!]! @relation(link: INLINE)

   status: KeyResultStatus! @relation(link: INLINE)
}
