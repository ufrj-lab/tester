type View {
   id: ID! @id

   welcome: Welcome! @relation(link: INLINE)
   company: Company! @relation(link: INLINE)

   menus: [Menu!]! @relation(link: INLINE)

   tests: [Test!]! @relation(link: INLINE)
   steps: [Step!]! @relation(link: INLINE)
}

type Welcome {
   id: ID! @id

   title: String!
   message: String!
}

type Company {
   id: ID! @id

   name: String!
   abbr: String

   logo: String
}

type Test {
   id: ID! @id

   title: String!

   steps: [Step!]! @relation(link: INLINE)
   menus: [Menu!]! @relation(link: INLINE)

   results: [TestResult!]!
}

type Menu {
   id: ID! @id

   menu: Menu @relation(name: "SubMenu")

   name: String!

   items: [Menu!]! @relation(link: INLINE, name: "SubMenu")
}

type Step {
   id: ID! @id

   question: String!

   target: Menu! @relation(link: INLINE, name: "StepTarget")

   path: [Menu!]! @relation(link: INLINE, name: "CorectPath")

   results: [StepResult!]!
}

enum ResultStatus {
   SUCESSES
   PARTIAL
   FAIL
   ABORTED
}

type TestResult {
   id: ID! @id

   parent: Test! @relation(link: INLINE)

   start: DateTime!
   end: DateTime

   time: TimeResult @relation(link: INLINE)

   steps: [StepResult!]! @relation(link: INLINE)

   status: ResultStatus! @default(value: ABORTED)
}

type TimeResult {
   id: ID! @id

   int: Int!
   text: String!
}

type StepResult {
   id: ID! @id

   parent: Step! @relation(link: INLINE)

   resultParent: TestResult!

   start: DateTime!
   end: DateTime

   time: TimeResult @relation(link: INLINE)

   path: [Menu!]! @relation(link: INLINE)

   status: ResultStatus! @default(value: ABORTED)
}
