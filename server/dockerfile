FROM node:alpine AS build

ENV NPM_CONFIG_PREFIX /home/node/.npm-global
ENV PATH $PATH:/home/node/.npm-global/bin

COPY ./ /app

WORKDIR /app

RUN   npm i --ignore-scripts -g prisma && \
      npm i --no-optional --ignore-scripts && \
      npm run postinstall && \
      npm run build && \
      mkdir prod/ && \
      mkdir prod/db && \
      cp docker-entrypoint.sh ./prod && \
      cp ./db/*.prisma ./prod/db && \
      cp package*.json ./prod && \
      cp prisma.yml ./prod && \
      cp -r ./dist ./prod && \
      chmod +x ./prod/docker-entrypoint.sh



FROM node:alpine

RUN apk add --no-cache tini

ARG PROTOCOL=http
ARG HOST=api.tester.olimpo.tic.ufrj.br
ARG IP=146.164.170.41

ENV HEALTHCHECK_URL http://localhost:4000/.well-known/apollo/server-health

ENV PRISMA_ENDPOINT http://orm:4466

ENV NPM_CONFIG_PREFIX /home/node/.npm-global
ENV PATH $PATH:/home/node/.npm-global/bin

ENV NODE_ENV production

LABEL traefik.docker.network=web
LABEL traefik.enable=true
LABEL traefik.server.port=4000
LABEL traefik.server.protocol=$PROTOCOL
LABEL traefik.server.frontend.rule=Host:$HOST
LABEL traefik.server.frontend.allowedHosts=tester.olimpo.tic.ufrj.br,$HOST
LABEL traefik.server.whiteList.sourceRange=$IP

EXPOSE 4000

ENTRYPOINT ["/sbin/tini", "--", "/app/docker-entrypoint.sh"]

HEALTHCHECK --start-period=30s --interval=30s --timeout=3s --retries=3 CMD wget --quiet --tries=1 --spider $HEALTHCHECK_URL || exit 1

COPY --from=build --chown=node:node /home/node/.npm-global /home/node/.npm-global
COPY --from=build --chown=node:node /app/prod /app

USER node

WORKDIR /app

RUN npm i --no-optional --ignore-scripts --only=prod


